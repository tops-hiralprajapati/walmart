<?php

/**
 * ConsolidationRequest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * International Shipping
 *
 * This class is auto-generated by the OpenAPI generator v6.6.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\MP\CA\InternationalShipping;

use Walmart\Models\BaseModel;

/**
 * ConsolidationRequest Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class ConsolidationRequest extends BaseModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'ConsolidationRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'domesticCarrierId' => 'int',
        'domesticTrackingNo' => 'string',
        'shipmentIds' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'domesticCarrierId' => 'int32',
        'domesticTrackingNo' => null,
        'shipmentIds' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'domesticCarrierId' => false,
        'domesticTrackingNo' => false,
        'shipmentIds' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'domesticCarrierId' => 'domesticCarrierId',
        'domesticTrackingNo' => 'domesticTrackingNo',
        'shipmentIds' => 'shipmentIds'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'domesticCarrierId' => 'setDomesticCarrierId',
        'domesticTrackingNo' => 'setDomesticTrackingNo',
        'shipmentIds' => 'setShipmentIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'domesticCarrierId' => 'getDomesticCarrierId',
        'domesticTrackingNo' => 'getDomesticTrackingNo',
        'shipmentIds' => 'getShipmentIds'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('domesticCarrierId', $data ?? [], null);
        $this->setIfExists('domesticTrackingNo', $data ?? [], null);
        $this->setIfExists('shipmentIds', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['domesticCarrierId'] === null) {
            $invalidProperties[] = "'domesticCarrierId' can't be null";
        }
        if ($this->container['domesticTrackingNo'] === null) {
            $invalidProperties[] = "'domesticTrackingNo' can't be null";
        }
        if ($this->container['shipmentIds'] === null) {
            $invalidProperties[] = "'shipmentIds' can't be null";
        }

        return $invalidProperties;
    }

    /**
     * Gets domesticCarrierId
     *
     * @return int
    
     */
    public function getDomesticCarrierId()
    {
        return $this->container['domesticCarrierId'];
    }

    /**
     * Sets domesticCarrierId
     *
     * @param int $domesticCarrierId Domestic CarrierId.
     *
     * @return self
    
     */
    public function setDomesticCarrierId($domesticCarrierId)
    {
        if (is_null($domesticCarrierId)) {
            throw new \InvalidArgumentException('non-nullable domesticCarrierId cannot be null');
        }

        $this->container['domesticCarrierId'] = $domesticCarrierId;
        return $this;
    }

    /**
     * Gets domesticTrackingNo
     *
     * @return string
    
     */
    public function getDomesticTrackingNo()
    {
        return $this->container['domesticTrackingNo'];
    }

    /**
     * Sets domesticTrackingNo
     *
     * @param string $domesticTrackingNo Domestic Tracking No.
     *
     * @return self
    
     */
    public function setDomesticTrackingNo($domesticTrackingNo)
    {
        if (is_null($domesticTrackingNo)) {
            throw new \InvalidArgumentException('non-nullable domesticTrackingNo cannot be null');
        }

        $this->container['domesticTrackingNo'] = $domesticTrackingNo;
        return $this;
    }

    /**
     * Gets shipmentIds
     *
     * @return string[]
    
     */
    public function getShipmentIds()
    {
        return $this->container['shipmentIds'];
    }

    /**
     * Sets shipmentIds
     *
     * @param string[] $shipmentIds List of Shipment Ids (id from Get labels by PO call)
     *
     * @return self
    
     */
    public function setShipmentIds($shipmentIds)
    {
        if (is_null($shipmentIds)) {
            throw new \InvalidArgumentException('non-nullable shipmentIds cannot be null');
        }

        $this->container['shipmentIds'] = $shipmentIds;
        return $this;
    }
}
