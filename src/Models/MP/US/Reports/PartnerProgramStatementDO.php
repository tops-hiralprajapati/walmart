<?php

/**
 * PartnerProgramStatementDO
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Pregenerated Reports retiring on June 30, 2022 :
 *
 * This class is auto-generated by the OpenAPI generator v6.6.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\MP\US\Reports;

use Walmart\Models\BaseModel;

/**
 * PartnerProgramStatementDO Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class PartnerProgramStatementDO extends BaseModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'PartnerProgramStatementDO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'outstandingMCABalance' => 'float',
        'sellerInfo' => '\Walmart\Models\MP\US\Reports\SellerInfo',
        'accountSummary' => '\Walmart\Models\MP\US\Reports\PartnerProgramAccSummary',
        'transactionDetails' => '\Walmart\Models\MP\US\Reports\PartnerProgramTransactionDetails'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'outstandingMCABalance' => null,
        'sellerInfo' => null,
        'accountSummary' => null,
        'transactionDetails' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'outstandingMCABalance' => false,
        'sellerInfo' => false,
        'accountSummary' => false,
        'transactionDetails' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'outstandingMCABalance' => 'outstandingMCABalance',
        'sellerInfo' => 'sellerInfo',
        'accountSummary' => 'accountSummary',
        'transactionDetails' => 'transactionDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'outstandingMCABalance' => 'setOutstandingMCABalance',
        'sellerInfo' => 'setSellerInfo',
        'accountSummary' => 'setAccountSummary',
        'transactionDetails' => 'setTransactionDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'outstandingMCABalance' => 'getOutstandingMCABalance',
        'sellerInfo' => 'getSellerInfo',
        'accountSummary' => 'getAccountSummary',
        'transactionDetails' => 'getTransactionDetails'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('outstandingMCABalance', $data ?? [], null);
        $this->setIfExists('sellerInfo', $data ?? [], null);
        $this->setIfExists('accountSummary', $data ?? [], null);
        $this->setIfExists('transactionDetails', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];


        return $invalidProperties;
    }

    /**
     * Gets outstandingMCABalance
     *
     * @return float|null
    
     */
    public function getOutstandingMCABalance()
    {
        return $this->container['outstandingMCABalance'];
    }

    /**
     * Sets outstandingMCABalance
     *
     * @param float|null $outstandingMCABalance outstandingMCABalance
     *
     * @return self
    
     */
    public function setOutstandingMCABalance($outstandingMCABalance)
    {
        if (is_null($outstandingMCABalance)) {
            throw new \InvalidArgumentException('non-nullable outstandingMCABalance cannot be null');
        }

        $this->container['outstandingMCABalance'] = $outstandingMCABalance;
        return $this;
    }

    /**
     * Gets sellerInfo
     *
     * @return \Walmart\Models\MP\US\Reports\SellerInfo|null
    
     */
    public function getSellerInfo()
    {
        return $this->container['sellerInfo'];
    }

    /**
     * Sets sellerInfo
     *
     * @param \Walmart\Models\MP\US\Reports\SellerInfo|null $sellerInfo sellerInfo
     *
     * @return self
    
     */
    public function setSellerInfo($sellerInfo)
    {
        if (is_null($sellerInfo)) {
            throw new \InvalidArgumentException('non-nullable sellerInfo cannot be null');
        }

        $this->container['sellerInfo'] = $sellerInfo;
        return $this;
    }

    /**
     * Gets accountSummary
     *
     * @return \Walmart\Models\MP\US\Reports\PartnerProgramAccSummary|null
    
     */
    public function getAccountSummary()
    {
        return $this->container['accountSummary'];
    }

    /**
     * Sets accountSummary
     *
     * @param \Walmart\Models\MP\US\Reports\PartnerProgramAccSummary|null $accountSummary accountSummary
     *
     * @return self
    
     */
    public function setAccountSummary($accountSummary)
    {
        if (is_null($accountSummary)) {
            throw new \InvalidArgumentException('non-nullable accountSummary cannot be null');
        }

        $this->container['accountSummary'] = $accountSummary;
        return $this;
    }

    /**
     * Gets transactionDetails
     *
     * @return \Walmart\Models\MP\US\Reports\PartnerProgramTransactionDetails|null
    
     */
    public function getTransactionDetails()
    {
        return $this->container['transactionDetails'];
    }

    /**
     * Sets transactionDetails
     *
     * @param \Walmart\Models\MP\US\Reports\PartnerProgramTransactionDetails|null $transactionDetails transactionDetails
     *
     * @return self
    
     */
    public function setTransactionDetails($transactionDetails)
    {
        if (is_null($transactionDetails)) {
            throw new \InvalidArgumentException('non-nullable transactionDetails cannot be null');
        }

        $this->container['transactionDetails'] = $transactionDetails;
        return $this;
    }
}
