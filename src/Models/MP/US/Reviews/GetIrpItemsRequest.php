<?php

/**
 * GetIrpItemsRequest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Reviews Acceleration
 *
 * This class is auto-generated by the OpenAPI generator v6.6.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\MP\US\Reviews;

use Walmart\Models\BaseModel;

/**
 * GetIrpItemsRequest Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class GetIrpItemsRequest extends BaseModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'GetIrpItemsRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'search' => '\Walmart\Models\MP\US\Reviews\SearchRequest[]',
        'filter' => '\Walmart\Models\MP\US\Reviews\FilterRequest',
        'sort' => '\Walmart\Models\MP\US\Reviews\SortRequest[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'search' => null,
        'filter' => null,
        'sort' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'search' => false,
        'filter' => false,
        'sort' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'search' => 'search',
        'filter' => 'filter',
        'sort' => 'sort'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'search' => 'setSearch',
        'filter' => 'setFilter',
        'sort' => 'setSort'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'search' => 'getSearch',
        'filter' => 'getFilter',
        'sort' => 'getSort'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('search', $data ?? [], null);
        $this->setIfExists('filter', $data ?? [], null);
        $this->setIfExists('sort', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['filter'] === null) {
            $invalidProperties[] = "'filter' can't be null";
        }

        return $invalidProperties;
    }

    /**
     * Gets search
     *
     * @return \Walmart\Models\MP\US\Reviews\SearchRequest[]|null
    
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param \Walmart\Models\MP\US\Reviews\SearchRequest[]|null $search Search request.
     *
     * @return self
    
     */
    public function setSearch($search)
    {
        if (is_null($search)) {
            throw new \InvalidArgumentException('non-nullable search cannot be null');
        }

        $this->container['search'] = $search;
        return $this;
    }

    /**
     * Gets filter
     *
     * @return \Walmart\Models\MP\US\Reviews\FilterRequest
    
     */
    public function getFilter()
    {
        return $this->container['filter'];
    }

    /**
     * Sets filter
     *
     * @param \Walmart\Models\MP\US\Reviews\FilterRequest $filter filter
     *
     * @return self
    
     */
    public function setFilter($filter)
    {
        if (is_null($filter)) {
            throw new \InvalidArgumentException('non-nullable filter cannot be null');
        }

        $this->container['filter'] = $filter;
        return $this;
    }

    /**
     * Gets sort
     *
     * @return \Walmart\Models\MP\US\Reviews\SortRequest[]|null
    
     */
    public function getSort()
    {
        return $this->container['sort'];
    }

    /**
     * Sets sort
     *
     * @param \Walmart\Models\MP\US\Reviews\SortRequest[]|null $sort Sort request.
     *
     * @return self
    
     */
    public function setSort($sort)
    {
        if (is_null($sort)) {
            throw new \InvalidArgumentException('non-nullable sort cannot be null');
        }

        $this->container['sort'] = $sort;
        return $this;
    }
}
